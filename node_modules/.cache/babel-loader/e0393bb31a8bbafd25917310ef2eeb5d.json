{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\HTML Training - Copy\\\\React-Projects\\\\scratch\\\\scratch\\\\src\\\\organisms\\\\billingDetailsReport\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport \"../../app.scss\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Menu, Button, Input, Dropdown } from \"antd\";\nimport { DownOutlined, DownloadOutlined } from \"@ant-design/icons\";\nimport { MONTHS } from \"../../utils/constants\";\nimport { isEmpty } from \"../../utils/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BillingDetailsReport = () => {\n  _s();\n\n  const bills = useSelector(state => state.bills);\n  const [month, setMonth] = useState(\"\");\n  const [budget, setBudget] = useState(0);\n\n  const menu = () => {\n    const billingCategories = new Set();\n    bills.map(bill => billingCategories.add(bill.category));\n    return /*#__PURE__*/_jsxDEV(Menu, {\n      children: [/*#__PURE__*/_jsxDEV(Menu.Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), MONTHS.map((month, index) => /*#__PURE__*/_jsxDEV(Menu.Item, {\n        onClick: () => setMonth(month),\n        children: month\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  };\n\n  const downloadReport = () => {\n    const monthlyBills = bills.filter(bill => bill.date.format(\"MMMM\") === month);\n\n    if (!isEmpty(monthlyBills)) {\n      monthlyBills.sort((billObjectA, billObjectB) => billObjectA.amount !== null && billObjectB.amount !== null && billObjectA.amount < billObjectB.amount ? 1 : -1);\n    }\n\n    let sum = 0;\n    let billingContent = {\n      bills: []\n    };\n\n    for (let index = 0; index < monthlyBills.length; index++) {\n      if (monthlyBills[index].amount) {\n        if (sum + monthlyBills[index].amount > budget) {\n          continue;\n        } else {\n          sum = sum + monthlyBills[index].amount;\n          const {\n            description,\n            category,\n            amount,\n            date\n          } = monthlyBills[index];\n          billingContent.bills.push({\n            id: String(index + 1),\n            description: description,\n            category: category,\n            amount: amount,\n            date: date.format(\"MM-DD-YYYY\")\n          });\n        }\n      }\n    }\n\n    const a = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify(billingContent, null, 2)], {\n      type: \"text/plain\"\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = `${month}-Billing-Report.json`;\n    a.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"billing-details-report-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"billing-details-report-content\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Budget\",\n        required: true,\n        value: budget ? budget : \"\",\n        onChange: event => setBudget(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        overlay: menu(),\n        trigger: [\"click\"],\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: [`Choose Month ${month ? ` : ${month}` : ``}`, /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(DownloadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this),\n        disabled: !budget || !month,\n        onClick: () => downloadReport(),\n        children: \"Download Billing Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BillingDetailsReport, \"K0nwVNJ710kX2gX7SCSmANmYdOo=\", false, function () {\n  return [useSelector];\n});\n\n_c = BillingDetailsReport;\nexport default BillingDetailsReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"BillingDetailsReport\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/HTML Training - Copy/React-Projects/scratch/scratch/src/organisms/billingDetailsReport/index.tsx"],"names":["React","useState","useSelector","Menu","Button","Input","Dropdown","DownOutlined","DownloadOutlined","MONTHS","isEmpty","BillingDetailsReport","bills","state","month","setMonth","budget","setBudget","menu","billingCategories","Set","map","bill","add","category","index","downloadReport","monthlyBills","filter","date","format","sort","billObjectA","billObjectB","amount","sum","billingContent","length","description","push","id","String","a","document","createElement","file","Blob","JSON","stringify","type","href","URL","createObjectURL","download","click","event","Number","target","value"],"mappings":"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","sourcesContent":["import \"../../app.scss\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Menu, Button, Input, Dropdown } from \"antd\";\nimport { DownOutlined, DownloadOutlined } from \"@ant-design/icons\";\nimport { MONTHS } from \"../../utils/constants\";\nimport { isEmpty } from \"../../utils/helper\";\n\nconst BillingDetailsReport: React.FC = () => {\n  const bills = useSelector((state: BillingState) => state.bills);\n  const [month, setMonth] = useState<string>(\"\");\n  const [budget, setBudget] = useState<number>(0);\n\n  const menu = () => {\n    const billingCategories = new Set<string>();\n    bills.map((bill: IBilling) => billingCategories.add(bill.category));\n    return (\n      <Menu>\n        <Menu.Divider />\n        {MONTHS.map((month: string, index) => (\n          <Menu.Item key={index} onClick={() => setMonth(month)}>\n            {month}\n          </Menu.Item>\n        ))}\n      </Menu>\n    );\n  };\n\n  const downloadReport = () => {\n    const monthlyBills: IBilling[] = bills.filter(\n      (bill: IBilling) => bill.date.format(\"MMMM\") === month\n    );\n    if (!isEmpty(monthlyBills)) {\n      monthlyBills.sort((billObjectA: IBilling, billObjectB: IBilling) =>\n        billObjectA.amount !== null &&\n        billObjectB.amount !== null &&\n        billObjectA.amount < billObjectB.amount\n          ? 1\n          : -1\n      );\n    }\n    let sum = 0;\n    let billingContent: BillingState = { bills: [] };\n    for (let index = 0; index < monthlyBills.length; index++) {\n      if (monthlyBills[index].amount) {\n        if (sum + monthlyBills[index].amount > budget) {\n          continue;\n        } else {\n          sum = sum + monthlyBills[index].amount;\n          const { description, category, amount, date } = monthlyBills[index];\n          billingContent.bills.push({\n            id: String(index + 1),\n            description: description,\n            category: category,\n            amount: amount,\n            date: date.format(\"MM-DD-YYYY\"),\n          });\n        }\n      }\n    }\n    const a = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify(billingContent, null, 2)], {\n      type: \"text/plain\",\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = `${month}-Billing-Report.json`;\n    a.click();\n  };\n\n  return (\n    <div className=\"billing-details-report-container\">\n      <div className=\"billing-details-report-content\">\n        <Input\n          placeholder=\"Enter Budget\"\n          required\n          value={budget ? budget : \"\"}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setBudget(Number(event.target.value))\n          }\n        />\n        <Dropdown overlay={menu()} trigger={[\"click\"]}>\n          <Button>\n            {`Choose Month ${month ? ` : ${month}` : ``}`}\n            <DownOutlined />\n          </Button>\n        </Dropdown>\n        <Button\n          type=\"primary\"\n          icon={<DownloadOutlined />}\n          disabled={!budget || !month}\n          onClick={() => downloadReport()}\n        >\n          Download Billing Report\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BillingDetailsReport;\n"]},"metadata":{},"sourceType":"module"}